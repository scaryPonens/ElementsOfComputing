// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:
	RAM64(in=in, address=address[0..5], load=lr1, out=or1);
	RAM64(in=in, address=address[0..5], load=lr2, out=or2);
	RAM64(in=in, address=address[0..5], load=lr3, out=or3);
	RAM64(in=in, address=address[0..5], load=lr4, out=or4);

	RAM64(in=in, address=address[0..5], load=lr5, out=or5);
	RAM64(in=in, address=address[0..5], load=lr6, out=or6);
	RAM64(in=in, address=address[0..5], load=lr7, out=or7);
	RAM64(in=in, address=address[0..5], load=lr8, out=or8);
	
	DMux8Way(in=load, sel=address[6..8], a=lr1, b=lr2, c=lr3, d=lr4, e=lr5, f=lr6, g=lr7, h=lr8);
	Mux8Way16(a=or1, b=or2, c=or3, d=or4, e=or5, f=or6, g=or7, h=or8, sel=address[6..8], out=out);
}