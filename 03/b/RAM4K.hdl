// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
	RAM512(in=in, address=address[0..8], load=lr1, out=or1);
	RAM512(in=in, address=address[0..8], load=lr2, out=or2);
	RAM512(in=in, address=address[0..8], load=lr3, out=or3);
	RAM512(in=in, address=address[0..8], load=lr4, out=or4);

	RAM512(in=in, address=address[0..8], load=lr5, out=or5);
	RAM512(in=in, address=address[0..8], load=lr6, out=or6);
	RAM512(in=in, address=address[0..8], load=lr7, out=or7);
	RAM512(in=in, address=address[0..8], load=lr8, out=or8);
	
	DMux8Way(in=load, sel=address[9..11], a=lr1, b=lr2, c=lr3, d=lr4, e=lr5, f=lr6, g=lr7, h=lr8);
	Mux8Way16(a=or1, b=or2, c=or3, d=or4, e=or5, f=or6, g=or7, h=or8, sel=address[9..11], out=out);
}