// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    // Put your code here:
	Nand(a=sel[0], b=sel[0], out=nots0);
	Nand(a=sel[1], b=sel[1], out=nots1);
	Nand(a=sel[2], b=sel[2], out=nots2);
	
	And(a=nots1, b=nots0, out=nots1nots0);
	And(a=nots1, b=sel[0], out=nots1s0);
	And(a=sel[1], b=nots0, out=s1nots0);
	And(a=sel[1], b=sel[0], out=s1s0);
	
	And(a=nots2, b=nots1nots0, out=nots2nots1nots0);
	And(a=nots2, b=nots1s0, out=nots2nots1s0);
	And(a=nots2, b=s1nots0, out=nots2s1nots0);
	And(a=nots2, b=s1s0, out=nots2s1s0);
	
	And(a=sel[2], b=nots1nots0, out=s2nots1nots0);
	And(a=sel[2], b=nots1s0, out=s2nots1s0);
	And(a=sel[2], b=s1nots0, out=s2s1nots0);
	And(a=sel[2], b=s1s0, out=s2s1s0);
	
	And(a=in, b=nots2nots1nots0, out=a);
	And(a=in, b=nots2nots1s0, out=b);
	And(a=in, b=nots2s1nots0, out=c);
	And(a=in, b=nots2s1s0, out=d);
	
	And(a=in, b=s2nots1nots0, out=e);
	And(a=in, b=s2nots1s0, out=f);
	And(a=in, b=s2s1nots0, out=g);
	And(a=in, b=s2s1s0, out=h);
}